#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  questGen.py
#
#  Copyright 2014 Tyler Dinsmoor <d@d-netbook>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#
#  Responsible for coming up with quests the DM can give the players
#  via in-game NPCs generated by townGen. civGen assigns quests to
#  populated NPCs, listed out for the DM.
#  Loot for quests is handled by lootGen, and special items are earned
#  for harder quests. There are few special quests, and many generic
#  quests, designed to encourage players to value gold.

import random

def wChoice(wCh):
	import random
	'''must be in format: wChoice(('a',1.0),('b',2.0),('c',3.0))'''
	totalChoice = sum(w for c, w in wCh)
	random_uniform = random.uniform(0, totalChoice)
	upto = 0
	for c, w in wCh:
		if upto + w > random_uniform:
			return c
		upto += w
	assert False, "Shouldn't get here"

'''
Quest Requirements:
	Theme
	Difficulty
	Rewards
	Location
	NPCs

'''

def getTheme():
	'''
	Based on the NPC requesting the quest, blacksmiths could be item
	hunting missions, royal courts could be embassy/diplomatic missions,
	bandits could be combat, etc. Should compile a list.
	'''
	return 'Combat'

def getDifficulty():
	'''
	Based on the hostility of the region, as well as techlevel and such.
	Probably should be implemented in landGen and used in other programs,
	such as being just imported to here.
	'''
	return 'Normal'

def getRewards():
	'''
	Choses a related reward for quest difficulty, the area, how affluent
	the region is, and the type of quest.
	ie, a mission for a gov't, usually gold, a farmer, general goods,
	a blacksmith, a good weapon/armor, innkeeper, free room/board
	'''
	return '10 Gold'

def getLocation():
	'''
	Chooses the cell(building and room) where the quest origionates,
	just keeps for reference
	'''
	return 'Bar in Orgthall'

def getNPCs():
	'''
	Should Lookup the dictionary of NPCs in a region with the quest flag
	and then assign them either a part of a quest, or to be in charge of
	a quest. Should be determined by a data value such as pc['questVal']=
	0 = No Quest
	1 = Minor Part in Q
	2 = Major Part in Q
	4 = Owner of Q
	This function could have either a minor or major impact. Not yet decided.
	Could:
		Dynamically create NPCs based on need of quest
	or:
		Use pre-created dict of characters to assign to a paticular quest
	'''
	return 'Amanda Hugnkis'

def main():
	quest = {}
	quest['theme'] = getTheme()
	quest['difficulty'] = getDifficulty()
	return quest

if __name__ == '__main__':
	 main()

